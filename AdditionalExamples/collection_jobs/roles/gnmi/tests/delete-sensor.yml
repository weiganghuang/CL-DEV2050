---
- hosts: localhost
  vars_files: 
    - '/Users/weigang/git/CNC-Automation/collection/roles/gnmi-sensor/defaults/main.yml'
    - '/Users/weigang/git/CNC-Automation/collection/roles/gnmi-sensor/defaults/sensors.yml'
   
  tasks:
    
    - name: create collection payload
      
      template:
        src: "/Users/weigang/git/CNC-Automation/collection/roles/gnmi-sensor/templates/sensor-del.j2"
        dest: "{{tmp_file_path}}/del-sensor-payload-{{my_idx}}.json"
      with_items: "{{sensors}}"
      loop_control:
        index_var: my_idx

    - name: get.ticket.step1
      uri:
        validate_certs: no
        status_code: [201, 202]
        method: POST
        url: "https://{{cnc_ip}}:{{cnc_port}}/crosswork/sso/v1/tickets"
        return_content: yes
        body: "username={{cnc_user}}&password={{cnc_pw}}"
        headers:
          Content-Type: application/x-www-form-urlencoded
      register: ApiTicket

    - debug:
        msg: "{{ ApiTicket.content }}"

    - name: get.jwt.step2
      uri:
        validate_certs: no
        status_code: [200, 201, 202]
        method: POST
        url: "https://{{cnc_ip}}:{{cnc_port}}/crosswork/sso/v1/tickets/{{ApiTicket.content}}"
        return_content: yes
        body_format: form-urlencoded
        body: 
          service: "https://{{cnc_ip}}:{{cnc_port}}/app-dashboard"
        headers:
          Content-Type: application/x-www-form-urlencoded
      register: myJWT

    - debug:
        msg: "{{myJWT.content}}"


    - name: create collection jobs
      uri:
        validate_certs: no
        status_code: [200, 201, 202]
        method: DELETE
        url: "https://{{cnc_ip}}:{{cnc_port}}/crosswork/collection/v1/collectionjob"
        return_content: yes
        headers:
          Content-Type: application/yang-data+json
          Accept: application/yang-data+json
          Authorization: "Bearer {{ myJWT.content }}"
        body_format: json
        body: "{{ lookup('file', '{{tmp_file_path}}/del-sensor-payload-{{my_idx}}.json')}}"
      with_items: "{{sensors}}"
      loop_control:
        index_var: my_idx
        pause: 3
      register: myOutput

    # - debug:
    #     msg: "{{ myOutput}}"


