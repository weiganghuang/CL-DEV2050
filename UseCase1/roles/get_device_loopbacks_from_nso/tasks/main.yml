---
# tasks file for getting device infor

#Collect a loopback2 nso

- name: collect_loopback_2
  cisco.nso.nso_show:
    url: "http{{tls}}://{{nso_ip}}:{{nso_port}}/jsonrpc"
    username: "{{ nso_username }}"
    password: "{{ nso_password }}"
    # item[0] is the hostname. The right and left backet and join is to format the hostname for the xpath
    # Loopback{2} in the below line is loopback ID. "2" means loopback2
    path: "/devices/device{{left_bracket}}{{item.host_name}}{{right_bracket}}/config/interface/Loopback{2}/ipv4/address/ip"
  register: result_loopback_2
  loop: "{{ devices }}"
  loop_control:
    pause: "{{ pause_duration }}"
    index_var: i
  when: (i>=0) and (i< upper_limit )
  tags: get_loopback2
  ignore_errors: True


- name: Create a new dictory with loopback2
  set_fact:
      loopback2_dict: "{{ loopback2_dict | default([]) | combine ({ item.output.data['tailf-ncs:devices'].device[0].name : item.output.data['tailf-ncs:devices'].device[0].config['tailf-ned-cisco-ios-xr:interface'].Loopback[0].ipv4.address.ip }) }}"
  loop: "{{result_loopback_2.results}}"
  when: item.output.data['tailf-ncs:devices'].device[0].config['tailf-ned-cisco-ios-xr:interface'] is defined
  tags: new_dict


- name: display loopback2_dict dict var
  debug:
    var: loopback2_dict
  tags: new_dict
