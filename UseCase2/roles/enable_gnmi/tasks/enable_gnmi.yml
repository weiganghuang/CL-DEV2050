---

- name: prepare gnmi enabling payload file
  template:
    src: "enable_gnmi.j2"    
    dest: "{{playbook_dir}}/tmp/enable_gnmi_{{item.host_name}}.json"
  when: loopback2_dict[item.host_name] is defined

- name: prepare admin up payload file
  template:
    src: "admin_up.j2"    
    dest: "{{playbook_dir}}/tmp/admin_up_{{item.host_name}}.json"
  when: loopback2_dict[item.host_name] is defined


- name: apply enabling gnmi
  uri:
    validate_certs: no
    status_code: [200, 201, 202]
    method: PATCH
    url: "https://{{cnc_ip}}:{{cnc_port}}/crosswork/inventory/v1/nodes"
    return_content: yes
    headers:
      Content-Type: application/yang-data+json
      Accept: application/yang-data+json
      Authorization: "Bearer {{ myJWT.content }}"
    body_format: json
    body: "{{ lookup('file', '{{playbook_dir}}/tmp/enable_gnmi_{{item.host_name}}.json')}}"
  register: myOutput
  when: loopback2_dict[item.host_name] is defined

- name: pause
  pause:
    seconds: 1
  when: loopback2_dict[item.host_name] is defined

- name: set admin up for the device
  uri:
    validate_certs: no
    status_code: [200, 201, 202]
    method: PATCH
    url: "https://{{cnc_ip}}:{{cnc_port}}/crosswork/inventory/v1/nodes"
    return_content: yes
    headers:
      Content-Type: application/yang-data+json
      Accept: application/yang-data+json
      Authorization: "Bearer {{ myJWT.content }}"
    body_format: json
    body: "{{ lookup('file', '{{playbook_dir}}/tmp/admin_up_{{item.host_name}}.json')}}"
  register: myOutput
  when: loopback2_dict[item.host_name] is defined

- name: pause
  pause:
    seconds: 1
  when: loopback2_dict[item.host_name] is defined




